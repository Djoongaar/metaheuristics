class Attack:
    def __init__(self):
        pass

    def median_filter(self, n=3):
        """
        Применяет медианный фильтр на матрицах с заданным размером
        :param n: 3
        """
        pass

    def gaussian_filter(self, n=3):
        """
        Применяет фильтр Гаусса на матрицах с заданным размером
        :param n: Possible values: 3, 5
        """
        pass

    def average_filter(self, n=3):
        """
        Применяет усредненную фильтрацию на матрицах с заданным размером
        :param n: 3
        """
        pass

    def sharpening_filter(self):
        """
        Фильтр увеличивает контраст соседних пикселей
        """
        pass

    def histogram_equalization(self):
        """
        Изменение контрастности изображения с использованием гистограмм
        """
        pass

    def gamma_correction(self, n=0.2):
        """
        Искажения яркости пикселей с использованием степенной функции с заданным параметром
        :param n: Возможные параметры: 0.2, 0.4
        """
        pass

    def gaussian_noise(self, n=0.001):
        """
        Нанесение статистического шума, имеющий плотность вероятности,
        равную плотности вероятности нормального распределения
        :param n: Возможные параметры: 0.001, 0.005, 0.009
        """
        pass

    def salt_and_pepper_noise(self, n=0.01):
        """
        С заданной вероятностью затемняет или засвечивает пиксели изображения
        :param n: Possible values: 0.01, 0.02, 0.03
        """
        pass

    def cropping_quarter(self, place="center"):
        """
        В заданной области изображения затемняет или засвечивает 1/4 всех пикселей
        :param place: Возможные параметры: center, top-left, bottom-right
        """
        pass

    def scaling(self, size=1024):
        """
        Растягивает / сжимает изображения и возвращает к изначальным размерам с потерей качества
        :param size: Возможные параметры: 1024 (512 -> 1024 -> 512), 256 (512 -> 245 -> 512)
        """
        pass

    def rotation(self, degree=5):
        """
        Вращает изображение против часовой стрелки на заданный угол
        :param degree: Возможные параметры: 5, 45, 90
        """
        pass

    def compression(self, rate=70):
        """
        Применяет сжатие JPEG с заданным параметром
        :param rate: Возможные параметры: 70, 80, 90
        """
        pass
